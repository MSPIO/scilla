import ListUtils PairUtils

library Test

let one_msg = 
  fun (msg : Message) => 
    let nil_msg = Nil {Message} in
    Cons {Message} msg nil_msg

let fst_f = @fst Int32 Int32

let list_hash =
  fun (l : List (Pair(Int32)(Int32))) =>
    let folder = @list_foldr (Pair(Int32)(Int32)) ByStr32 in
    let init = 0x0000000000000000000000000000000000000000000000000000000000000000 in
    let iter =
      fun (h : Pair(Int32)(Int32)) =>
      fun (z : ByStr32) =>
        let hh = fst_f h in
        (* no accummulation *)
        let y = builtin sha256hash hh in
        builtin sha256hash y
     in
     folder iter init l
     
contract Test
()

field gmap : Map Int32 Int32 = Emp Int32 Int32
field topkey : Int32 = Int32 0

transition hash()
  p <- gmap;

  mp = builtin to_list p;
  h = list_hash mp;

  msg = {_tag : "Main"; _recipient : _sender; _amount : Uint128 0; hash : h};
  msgs = one_msg msg;
  send msgs

end
